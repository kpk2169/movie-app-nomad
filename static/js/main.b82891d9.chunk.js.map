{"version":3,"sources":["routers/About.js","components/Movie.js","routers/home.js","routers/Detail.js","components/Navigation.js","App.js","index.js"],"names":["About","props","console","log","className","Movie","id","year","title","summary","poster","genres","to","pathname","state","src","alt","map","genre","index","slice","prototype","PropTypes","number","isRequired","string","arrayOf","Home","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","Detail","location","history","undefined","push","Navigation","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b82891d9.chunk.js","sourcesContent":["import React from 'react';\nimport \"./About.css\";\n\n/*\n    route props \n    movie 를 클릭하면 movie 디테일 화면으로 이동... \n*/\n\nfunction About(props) {\n    console.log(props);\n    return (\n        <div className=\"about__container\">\n            <span>\n                \"Freedom is the freedom to say that two plus two make four. If that i granted, all else follows.\"\n            </span>\n            <span>\n                - George Orwell, 1984\n            </span>\n        </div>\n    );\n}\n\nexport default About;","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\nfunction Movie({ id, year, title, summary, poster, genres }) {\n    return (\n        <Link to={{\n            pathname: `/movie/${id}`,\n            state: {\n                id,\n                year,\n                title,\n                summary,\n                poster,\n                genres\n            }\n         } }>\n            <div className=\"movie\">\n                <img src={poster} alt={title} title={title}/>\n                <div className=\"movie__data\">\n                    <h3 className=\"movie__title\" >{title}</h3>\n                    <h5 className=\"movie__year\">{year}</h5>\n                    <ul className=\"movie__genres\">{genres.map((genre, index) => {\n                        return <li className=\"movie__genre\" key={ index }>{ genre }</li>\n                    })}</ul>\n                    {/* <h5 className=\"movie__genres\">{genres.map(genre => {\n                        return genre + \" \";\n                    }) }</h5> */}\n                    <p className=\"movie__summary\">{summary.slice(0,180)}...</p>\n                    {/* 텍스트를 어레이로 분할한다. */}\n                </div>\n            </div>\n        </Link>\n    );\n}\n\nMovie.prototype = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\n}\n\nexport default Movie","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"../components/Movie\";\nimport \"./Home.css\";\n// cmd + d 다중선택 동일한 코드 동시 편집하기 ] \n\nclass Home extends React.Component {\n   // render Method 를 가지고 있음 클래스는 return을 가지지않음 함수가 아니기 때문에\n   /*\n   react 에서 유일하게 사용하는 함수 render() {}\n   render 전에 실행되는 함수들이 존재함 생명주기 \n   mounting 생성 \n   updating 일반적인 업데이트\n   unmounting 컴포넌트 죽음 화면 이동 시  state, \n   */\n  componentDidUpdate() {\n    console.log(\"update component\");\n  }\n  componentWillUnmount() {\n    console.log(\"Good bye~~~\");\n  }\n  \n  state = {\n    isLoading: true,\n    movies: []\n  };\n\n  getMovies = async () => {\n    const api_url = \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\";\n    const { data: { data : { movies } }} = await axios.get(api_url); // axios 가 끝날때까지 기다린다...\n    this.setState({ isLoading: false , movies : movies});\n  }\n  \n  componentDidMount() {\n    console.log(\"first component rendered\");\n    // didMount 에서 data 를 fetch 한다... \n    // setTimeout(() => {\n    //   this.setState({isLoading: false})\n    // }, 6000);\n    this.getMovies();\n  }\n\n  render() {\n    console.log(\"render start\");\n    const { isLoading , movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ?\n          (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span> \n          </div>\n          ) : (\n          <div className=\"movies\">\n              {\n                movies.map(movie => {\n                  return <Movie\n                    key={movie.id}\n                    id={movie.id}\n                    year={movie.year}\n                    title={movie.title}\n                    summary={movie.summary}\n                    poster={movie.medium_cover_image}\n                    genres={movie.genres}\n                    />\n                })\n              }\n          </div>\n          )}\n      </section>\n    );\n  }\n}\n\n\nexport default Home;\n\n\n\n/*\n// function maptest(array1) {\n  //   array1.map(function (value) {\n    //     return value;\n    //   });\n    // }\n    \n    function Food({ name , picture , rating }) {  // {fav} object 안에서 fav만을 가져온다.\n      return (<div>\n        <h1>I like {name}</h1>\n        <h4>{rating}/5.0</h4>\n        <img src={picture} alt={name} />\n        </div>);\n      }\n      const foodILike = [{ id: 1, name: \"kimchi\", image: \"https://w.namu.la/s/2958e0d7304f1b744021983c55747de2840e0e59a1f3d677d9315f5bad981f002769ce59921aea02b2dd23b5384a0ce30864fe6d84ea1b9aaed80fb3b5f60b6d4a4d6b735bd0ad3194a5bdbaebb7f4dfece3954e96826f08374a2933b4b72d962a7f3332a90bc4e8434e0f5eae5a1ecf\", rating : 5 },\n      {\n        id: 2, name: \"snacks\", image: \"https://w.namu.la/s/2958e0d7304f1b744021983c55747de2840e0e59a1f3d677d9315f5bad981f002769ce59921aea02b2dd23b5384a0ce30864fe6d84ea1b9aaed80fb3b5f60b6d4a4d6b735bd0ad3194a5bdbaebb7f4dfece3954e96826f08374a2933b4b72d962a7f3332a90bc4e8434e0f5eae5a1ecf\", rating: 4.3  }];\n        \n        function renderFood(dish) {\n          return < Food key={dish.id} name={dish.name} picture={ dish.image } rating={dish.rating} />\n        }\n        \n        Food.propTypes = {\n          name: PropTypes.string.isRequired,\n          picture: PropTypes.string.isRequired,\n          rating : PropTypes.number.isRequired\n        }\n        state = {\n          count: 0\n        };\n        \n        // setState 함수로 state를 변경해야 render를 재호출해 리로드된다...\n        add = () => {\n          this.setState(current => ({ count: current.count + 1 }));\n        };\n        minus = () => {\n          this.setState(current => ({ count: current.count - 1 }));\n        };\n       <h1>the number is : {this.state.count}</h1>\n       <button onClick={ this.add }>Add</button>\n       <button onClick={ this.minus }>Minus</button>\n        */","import React from 'react';\nimport \"./Detail.css\";\n\nclass Detail extends React.Component {\n\n    componentDidMount() {\n        const { location, history } = this.props;\n        if (location.state === undefined) {\n            history.push(\"/\");\n        }\n    }\n\n    render() {\n        const { location } = this.props;\n        if (location.state) {\n            return (\n                <div className=\"detail__movie\">\n                    <img src={location.state.poster} alt={location.state.title} title={location.state.title}/>\n                <div className=\"detail__movie__data\">\n                    <h3 className=\"detail__movie__title\" >{location.state.title}</h3>\n                    <h5 className=\"detail__movie__year\">{location.state.year}</h5>\n                    <ul className=\"detail__movie__genres\">{location.state.genres.map((genre, index) => {\n                        return <li className=\"detail__movie__genre\" key={ index }>{ genre }</li>\n                    })}</ul>\n                    {/* <h5 className=\"movie__genres\">{genres.map(genre => {\n                        return genre + \" \";\n                    }) }</h5> */}\n                    <p className=\"detail__movie__summary\">{location.state.summary}</p>\n                    {/* 텍스트를 어레이로 분할한다. */}\n                </div>\n            </div>\n            );\n        } else {\n            return null;\n        }\n     }\n}\n\n\n\nexport default Detail;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./Navigation.css\";\n\nfunction Navigation() {\n    return (\n        <div className=\"nav\">\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/about\">About</Link>\n        </div>\n    );\n}\n\nexport default Navigation;","import React from \"react\";  \nimport { HashRouter, Route } from \"react-router-dom\";\nimport About from \"./routers/About.js\";\nimport Home from './routers/home.js';\nimport Detail from './routers/Detail.js';\nimport Navigation from \"./components/Navigation.js\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/About\" component={About} />\n      <Route path=\"/movie/:id\" component={Detail} />\n    </HashRouter>\n  \n    );\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n/*\n  <App /> Component 컴포넌트는 HTML 을 반환하는 함수 ... \n  javascript 와 html 을 연결해주는 jsx \n  */\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('potato')\n);\n\n"],"sourceRoot":""}